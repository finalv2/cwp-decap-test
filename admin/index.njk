---
eleventyExcludeFromCollections: true
---

<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="noindex" />
    <title>Content Manager</title>
    <script src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script>
  </head>
  <body>
    <!-- Include the script that builds the page and powers Decap CMS -->
    <script src="https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js"></script>
    <script type="module">

      const Strategy = createClass({
        render: function() {
          const entry = this.props.entry;

          return h('div', {},
            h('div', { className: 'page-banner', 'data-type': 'strategy', 'data-width': 'full' },
              h('div', { className: 'l-wrapper' },
                h('div', { className: 'nametag' },
                  h('span', { className: 'nametag-badge subhead'}, "Strategy"),
                  h('div', { className: 'nametag-text'},
                    h('h2', { className: "h1" }, entry.getIn(['data', 'title'])),
                  )
                )
              )
            ),
            h('div', {"className": "l-wrapper"},
              h('div', {"className": "l-section"},
                h('div', {"className": "l-stack"},
                  h('div', {"className": "l-wrapper-text l-center"},
                    this.props.widgetFor('body')
                  )
                )
              )
            )
          );
        }
      });

      const Resource = createClass({
        render: function() {
          const entry = this.props.entry;

          return h('div', { className: 'resource-detail'},
            h('div', { className: 'l-wrapper l-center' },
              h('div', { className: 'nametag'},
                h('span', { className: 'nametag-badge subhead' }, "Resource"),
                h('div', { className: 'nametag-text'},
                  h('h2', { className: "h1" }, entry.getIn(['data', 'title'])),
                  h('p', {}, entry.getIn(["data", "description"]))
                ),
              ),
              h('p', {},
                h('button', { className: 'button resource-download'}, "Download")
              )
            ),
          );
        }
      });

      const Story = createClass({
        render: function() {
          const entry = this.props.entry;
          const image = entry.getIn(['data', 'image']);
          const bg = this.props.getAsset(image).toString();

          return h('div', {},
            h('div', { className: 'page-banner', 'data-type': 'story', 'data-width': 'full', style: { '--background': `url("${bg}")`}},
              h('div', { className: 'l-wrapper'},
                h('div', { className: 'nametag' },
                  h('span', { className: 'nametag-badge subhead'}, entry.getIn(['data', 'type'])),
                  h('div', { className: 'nametag-text'},
                    h('h2', { className: "h1" }, entry.getIn(['data', 'title'])),
                  )
                ),
                h('p', { className: 'subhead'}, `Written by ${entry.getIn(['data', 'author'])} on ${entry.getIn(['data', 'date'])}`)
              )
            ),
            h('div', { className: 'l-wrapper' },
              h('div', { className: 'l-section' },
                h('div', {className: "l-wrapper-text l-center"},
                  h('div', {className: "l-stack"},
                    this.props.widgetFor('body')
                  )
                )
              )
            )
          )
        }
      });


      CMS.registerPreviewTemplate("strategies", Strategy);
      CMS.registerPreviewTemplate("resources", Resource);
      CMS.registerPreviewTemplate("stories", Story);
      CMS.registerPreviewStyle("../theme.css", { raw: false });
    </script>
  </body>
</html>