.card {
  --border-width: 0.1875rem;
  --inner-radius: calc(var(--radius-lg) - var(--border-width));
  color: var(--c-blue);
  display: flex;
  flex-direction: column;
  align-items: stretch;
  text-decoration: none;
  position: relative;
  border-radius: var(--radius-lg);
}

.card::before {
  border: var(--border-width) solid var(--c-blue);
  border-radius: var(--radius-lg);
  filter: url("#tornEdge");
}

.card {
  transition: scale 0.1s ease-out;
}

:is(.card, .strategy-card a):is(:focus, :hover) {
  scale: 1.03;
}

:is(.card, .strategy-card a):active {
  scale: 1.01;
}

.card svg {
  inline-size: 1.5em;
  block-size: 1.5em;
  display: block;
}

.card-header {
  background: var(--c-blue);
  gap: 0.5rem;
}

.card-header svg {
  inline-size: 1.5em;
  block-size: 1.5em;
}

.card > * {
  padding: 0.5rem 1rem;
  inline-size: 100%;
  margin: 0;
}

.card-header,
.card-cta {
  display: flex;
  font-weight: var(--font-bold);
  align-items: center;
}

[data-type="topic"] .card-cta {
  background: #fcf5e8;
}

@keyframes topic-arrow {
  from {
    transform: translateX(0rem);
  }
  to {
    transform: translateX(0.25rem);
  }
}

@keyframes download-arrow-initial {
  from {
    transform: translateY(0rem);
  }
  to {
    transform: translateY(-0.375rem);
  }
}

@keyframes download-arrow {
  from {
    transform: translateY(-0.25rem);
  }
  to {
    transform: translateY(0.0625rem);
  }
}


.card:hover .card-topic-arrow {
  animation: topic-arrow 0.5s cubic-bezier(0.61, 1, 0.88, 1) infinite alternate;
}

.card:hover .card-download-arrow {
  animation-name: download-arrow-initial, download-arrow;
  animation-duration: 0.5s;
  animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
  animation-iteration-count: 1, infinite;
  animation-direction: normal, alternate;
}


[data-type="resource"]::before {
  position: absolute;
  content: "";
  inset: 0;
  border: 2px solid var(--c-blue);
  border-radius: var(--radius-lg);
  filter: url("#tornEdge");
  z-index: -1;
}

[data-type="resource"] .card-header {
  background: var(--c-blue);
  color: #fff;
}

[data-type="resource"] .card-cta {
}

.card-header {
  border-start-start-radius: var(--inner-radius);
  border-start-end-radius: var(--inner-radius);
}

.card-body,
.card-cta {
  font-size: var(--font-sm-size);
  line-height: var(--font-sm-leading);
}

.card-body {
  font-weight: var(--font-normal);
  text-align: left;
  flex: 1;
  padding-block: 0.75rem;
}

.card-cta {
  padding-block: 0.5rem;
  border-end-start-radius: var(--inner-radius);
  border-end-end-radius: var(--inner-radius);
  gap: 0.375rem;
}

.card-download {
  position: relative;
  overflow: hidden;
  inline-size: 1.5em;
  block-size: 1.5em;
}

.card-download * {
  position: absolute;
  inset: 0;
  margin: 0;
}

/* Play card */

.strategy-card a {
  text-decoration: none;
  padding-block: 1rem;
  display: flex;
  gap: 1rem;
  font-weight: var(--font-bold);
  color: var(--c-blue);
  text-decoration: none;
  transform-origin: 0% 50%;
  transition: scale 0.1s ease-out,
              background 50ms ease-out,
              color 50ms ease-out;
}


@keyframes arrowWiggle {
    to {
        -webkit-transform: translateX(-10px);
        transform: translateX(-10px)
    }
}

.strategy-card a:is(:focus, :hover) svg {
  animation: arrowWiggle 0.5s cubic-bezier(0.39, 0.575, 0.565, 1) alternate infinite;
}

.play-list-links,
.play-list-links * {
  max-inline-size: unset;
}

.strategy-card svg {
  inline-size: 1.5rem;
  block-size: 1.5rem;
  fill: currentColor;
}